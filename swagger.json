{
  "openapi": "3.0.1",
  "info": {
    "title": "Express Boilerplate Api",
    "description": "This is a sample Express Boilerplate NodeJs Api.",
    "contact": {
      "email": "galiperdem@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/auth/sign-in": {
      "post": {
        "description": "Sign In",
        "tags": [
          "Authorization"
        ],
        "operationId": "signIn",
        "requestBody": {
          "description": "Sign in user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Access Token with User model",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Token"
                    },
                    {
                      "$ref": "#/components/schemas/UserModel"
                    }
                  ]
                }
              }
            }
          },
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        }
      }
    },
    "/auth/sign-up": {
      "post": {
        "description": "Sign Up",
        "tags": [
          "Authorization"
        ],
        "operationId": "signUp",
        "requestBody": {
          "description": "User Registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Access Token with User model",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserModel"
                    },
                    {
                      "$ref": "#/components/schemas/Token"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/sign-out": {
      "post": {
        "description": "Sign Out",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "put": {
        "description": "Change password",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Authorization"
        ],
        "operationId": "changePassword",
        "requestBody": {
          "description": "Change password body params",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserModel"
                    },
                    {
                      "$ref": "#/components/schemas/Token"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by user name",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username equals to email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "username equals to email",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The user with username that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        },
        "deprecated": true
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create new user. This can only be done by the authorized user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Successful Operation",
            "content": {}
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get all roles",
        "security": [
          {
            "Bearer": []
          }
        ],
        "operationId": "getRoles",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "description": "Create new role. This can only be done by the authorized user.",
        "operationId": "createRole",
        "requestBody": {
          "description": "Created role object",
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Successful Operation",
            "content": {}
          }
        }
      }
    },
    "/roles/{_id}": {
      "get": {
        "summary": "Get Role",
        "description": "Get Role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Role"
        ],
        "operationId": "getRole",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of the role to get",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Role",
        "description": "Update Role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Role"
        ],
        "operationId": "updateRole",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of the role to update",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uid"
            }
          }
        ],
        "requestBody": {
          "description": "update role with body params",
          "content": {
            "*/*": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          }
        }
      },
      "delete": {
        "summary": "Delete Role",
        "description": "Delete Role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Role"
        ],
        "operationId": "deleteRole",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "description": "ID of the role to delete",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get all permissions",
        "operationId": "getPermissions",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/my": {
      "put": {
        "description": "Update own profile information such as firstName, lastName and avatar.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "User"
        ],
        "requestBody": {
          "description": "Updated user profile; firstName, lastName and avatar.",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid user supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uid"
          },
          "email": {
            "type": "string"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "UserModel": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "SignInModel": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ChangePasswordModel": {
        "required": [
          "password",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        }
      },
      "Role": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uid"
          },
          "name": {
            "type": "string",
            "example": "role"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "RoleModel": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "format": "uid"
          },
          "name": {
            "type": "string",
            "example": "role"
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "level": {
            "type": "integer"
          },
          "parentName": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "string"
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}